"use strict";(self.webpackChunkrchain_docs=self.webpackChunkrchain_docs||[]).push([[459],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),h=a,f=u["".concat(c,".").concat(h)]||u[h]||p[h]||r;return n?o.createElement(f,i(i({ref:t},d),{},{components:n})):o.createElement(f,i({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2671:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var o=n(7462),a=(n(7294),n(3905));const r={sidebar_position:1},i="Introduction to developing on RChain",l={unversionedId:"Development/dev_on_rchain",id:"Development/dev_on_rchain",title:"Introduction to developing on RChain",description:"RChain is a Proof Of Stake (POS) smart contract platform. It parallelizes the proposal and execution of blocks to achieve higher throughput, and shorter finality times without sacrificing decentralization.",source:"@site/docs/Development/dev_on_rchain.md",sourceDirName:"Development",slug:"/Development/dev_on_rchain",permalink:"/rchain-docs/docs/Development/dev_on_rchain",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/dev_on_rchain.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Staking requirements",permalink:"/rchain-docs/docs/Staking/staking_requirements"}},c={},s=[{value:"Quick development setup",id:"quick-development-setup",level:2},{value:"Configuration files",id:"configuration-files",level:3},{value:"Running the blockchain",id:"running-the-blockchain",level:3},{value:"Do a first deploy and propose block",id:"do-a-first-deploy-and-propose-block",level:3},{value:"Going further",id:"going-further",level:3}],d={toc:s};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction-to-developing-on-rchain"},"Introduction to developing on RChain"),(0,a.kt)("p",null,"RChain is a Proof Of Stake (POS) smart contract platform. It parallelizes the proposal and execution of blocks to achieve higher throughput, and shorter finality times without sacrificing decentralization."),(0,a.kt)("h2",{id:"quick-development-setup"},"Quick development setup"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note :")," This guide will only work on rnode 0.12.0+"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"on ubuntu/debian")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"apt install ./rnode_0.x.x_all.deb\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"on macOS")),(0,a.kt)("p",null,"Prerequisites:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Java - We recommend Open JDK 11, ",(0,a.kt)("a",{parentName:"li",href:"https://openjdk.java.net/projects/jdk/11/"},"openjdk.java.net/projects/jdk/11/")),(0,a.kt)("li",{parentName:"ul"},"Libsodium - ",(0,a.kt)("a",{parentName:"li",href:"https://download.libsodium.org/doc/"},"https://download.libsodium.org/doc/")," installed in a standard prefix (/user or /user/local)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"tar -xvf rnode-0.x.x.tgz\ncd rnode-0.x.x\n./macos_install.sh\n")),(0,a.kt)("p",null,"If you have another operating system or want to use docker please consult ",(0,a.kt)("a",{parentName:"p",href:"https://rchain.atlassian.net/wiki/spaces/CORE/pages/428376065/User+guide+for+running+RNode"},"full documentation")),(0,a.kt)("h3",{id:"configuration-files"},"Configuration files"),(0,a.kt)("p",null,"Two configuration files are necessary, ~/.rnode/genesis/bonds.txt file and ~/.rnode/genesis/wallets.txt file. We will use the following key pair."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Warning :")," Do not use this private key for any other purpose than development !"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"private key 28a5c9ac133b4449ca38e9bdf7cacdce31079ef6b3ac2f0a080af83ecff98b36\npublic key  04be064356846e36e485408df50b877dd99ba406d87208add4c92b3c7d4e4c663c2fbc6a1e6534c7e5c0aec00b26486fad1daf20079423b7c8ebffbbdff3682b58\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'mkdir ~/.rnode && mkdir ~/.rnode/genesis\necho "04be064356846e36e485408df50b877dd99ba406d87208add4c92b3c7d4e4c663c2fbc6a1e6534c7e5c0aec00b26486fad1daf20079423b7c8ebffbbdff3682b58 100000000000" > ~/.rnode/genesis/bonds.txt\necho "1111Wbd8KLeWBVsxByF9iksJ4QRRjEF3nq1ScgAw7bMbtomxHsqqd,1000000000000000,0"\n')),(0,a.kt)("h3",{id:"running-the-blockchain"},"Running the blockchain"),(0,a.kt)("p",null,"Now the configuration files are set up, there is one validator allowed to deploy, and only one address that has REV. We can run the node."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"rnode run -s --validator-private-key  28a5c9ac133b4449ca38e9bdf7cacdce31079ef6b3ac2f0a080af83ecff98b36  --dev-mode\n")),(0,a.kt)("p",null,"This node is standalone, it is a one node blockchain network, therefore it does not download any block and starts at block height 0. It is executed with the ",(0,a.kt)("inlineCode",{parentName:"p"},"--dev-mode")," option, so the API is an extended API with explore deploy available."),(0,a.kt)("h3",{id:"do-a-first-deploy-and-propose-block"},"Do a first deploy and propose block"),(0,a.kt)("p",null,"Now in another shell (we don't want to stop the node) let's create our first rholang code, deploy it and propose the block."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# create the rholang file\necho "new stdout(\\`rho:io:stdout\\`) in { stdout!(\\"hello world\\") }" > hello.rho\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# deploy rholang\nrnode deploy --valid-after-block-number 0 --phlo-price 1 --phlo-limit 10000000 --private-key 28a5c9ac133b4449ca38e9bdf7cacdce31079ef6b3ac2f0a080af83ecff98b36 hello.rho\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# propose the block\nrnode --grpc-port 40402 propose\n")),(0,a.kt)("p",null,"You should see ",(0,a.kt)("inlineCode",{parentName:"p"},'"hello world"')," pop up in the logs, it means that your deploy has been included into a block, and the transaction has been executed."),(0,a.kt)("h3",{id:"going-further"},"Going further"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/fabcotech/rchain-toolkit"},"RChain toolkit")," is the main javascript library to automate RChain related operations."))}p.isMDXComponent=!0}}]);